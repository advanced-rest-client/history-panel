{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`history-panel-list`\n\n## Styling\n\n`<history-panel-list>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--history-panel-list` | Mixin applied to this elment | `{}`\n`--history-panel-list-list` | Mixin applied to the list container | `{}`\n`--history-panel-list-secondary-action-color` | Color of the secondary action button | `--primary-color`\n`--history-panel-list-url-label` | Mixin applied to the URL label | `{}`\n`--history-panel-list-method-label` | Mixin applied to the method label | `{}`",
      "summary": "",
      "path": "history-panel-list.js",
      "properties": [
        {
          "name": "requests",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "threshold",
          "type": "number | null | undefined",
          "description": "A list lower treshold when the `history-list-threshold` will be\nfired. It should informa the app that the user nearly reached\nthe end of the list and new items should be loaded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "120"
        },
        {
          "name": "_scrollTarget",
          "type": "Element",
          "description": "Scroll target for `iron-scroll-threshold`.\nThis is set in connectedCallback as the DOM has to be initialized\nbefore setting this property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "selectedItems",
          "type": "Array | null | undefined",
          "description": "List of selected items on the list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasTwoLines",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "draggableEnabled",
          "type": "boolean | null | undefined",
          "description": "Enables the comonent to accept drop action with a request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 53
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 2
            },
            "end": {
              "line": 151,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 156,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "notifyResize",
          "description": "Notifies the list that the resize event occurred.\nShould be called whhen content of the list changed but the list wasn't\nvisible at the time.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_thresholdHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 188,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestDetails",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 2
            },
            "end": {
              "line": 199,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_navigateItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleSelection",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 220,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeRowClass",
          "description": "Computes list item row class",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 2
            },
            "end": {
              "line": 229,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "Boolean",
              "description": "True if the item was selected"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Item class name dependeing on selection state"
          }
        },
        {
          "name": "_dragStart",
          "description": "Handler for the `dragstart` event added to the list item when `draggableEnabled`\nis set to true.\nThis function sets request data on the `dataTransfer` object with `arc/request-object`\nmime type. The request data is a serialized JSON with request model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 2
            },
            "end": {
              "line": 247,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDraggableValue",
          "description": "Computes value for the `draggable` property of the list item.\nWhen `draggableEnabled` is set it returns true which is one of the\nconditions to enable drag and drop on an element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "draggableEnabled",
              "type": "Boolean",
              "description": "Current value of `draggableEnabled`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "`true` or `false` (as string) depending on the argument."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/dnd.html",
          "description": "Drag and drop"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 258,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ApiElements.HistoryPanelList",
      "attributes": [
        {
          "name": "requests",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "threshold",
          "description": "A list lower treshold when the `history-list-threshold` will be\nfired. It should informa the app that the user nearly reached\nthe end of the list and new items should be loaded.",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selected-items",
          "description": "List of selected items on the list.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "has-two-lines",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 26
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "draggable-enabled",
          "description": "Enables the comonent to accept drop action with a request.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 53
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-items-changed",
          "description": "Fired when the `selectedItems` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "history-panel-list"
    },
    {
      "description": "History panel screen for Advanced REST Client.\n\n### Styling\n`<history-panel>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--history-panel` | Mixin applied to the element | `{}`\n`--arc-font-headline` | Mixin applied to the header | `{}`\n`--arc-font-subhead` | Mixin applied to the subheader | `{}`\n`--history-panel-loader` | Mixin applied to the loader element | `{}`\n`--history-panel-list` | Mixin apllied to the list element | `{}`\n`--history-panel-toast-revert-button` | Mixin appllied to the rever button | `{}`\n`--warning-primary-color` | Main color of the warning messages | `#FF7043`\n`--warning-contrast-color` | Contrast color for the warning color | `#fff`\n`--error-toast` | Mixin applied to the error toast | `{}`\n`--empty-info` | Mixin applied to the label rendered when no data is available. | `{}`\n`--history-panel-fab-background-color` | Bg color of fab button | `--primary-color`\n`--history-panel-bottom-sheet` | Mixin apllied to the `<bottom-sheet>` elements | `{}`\n`--context-menu-item-color` | Color of the dropdown menu items | ``\n`--context-menu-item-background-color` | Background olor of the dropdown menu items | ``\n`--context-menu-item-color-hover` | Color of the dropdown menu items when hovering | ``\n`--context-menu-item-background-color-hover` | Background olor of the dropdown menu items when hovering | ``\n`--bottom-sheet-width` | Width of the `<bottom-sheet>` element | `100%`\n`--bottom-sheet-max-width` | Max width of the `<bottom-sheet>` element | `700px`\n`--history-panel-bottom-sheet-right` | Right position of the `<bottom-sheet>` element | `40px`\n`--history-panel-bottom-sheet-left` | Left position of the `<bottom-sheet>` element | `auto`",
      "summary": "",
      "path": "history-panel.js",
      "properties": [
        {
          "name": "_latestDeleted",
          "type": "Array | null | undefined",
          "description": "List of requests that has been recently removed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "listHidden",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the requests lists is hidden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 6
            },
            "end": {
              "line": 315,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "selectedItems",
          "type": "Array.<Object>",
          "description": "Selected items list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 321,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasSelection",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when the user made a selection on the list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 91
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "editorOpened",
          "type": "boolean | null | undefined",
          "description": "When true the editor panel is rendered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "detailsOpened",
          "type": "boolean | null | undefined",
          "description": "When true the details panel is rendered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noAutoProjects",
          "type": "boolean | null | undefined",
          "description": "Passed to the request editor",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "draggableEnabled",
          "type": "boolean | null | undefined",
          "description": "Enables the comonent to accept drop action with a request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 6
            },
            "end": {
              "line": 341,
              "column": 39
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_exportOptionsOpened",
          "type": "boolean | null | undefined",
          "description": "Indicates that the export options panel is currently rendered.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 6
            },
            "end": {
              "line": 345,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_exportOptions",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 2
            },
            "end": {
              "line": 373,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 2
            },
            "end": {
              "line": 380,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "notifyResize",
          "description": "Notifies the list that the resize event occurred.\nShould be called whhen content of the list changed but the list wasn't\nvisible at the time.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 2
            },
            "end": {
              "line": 390,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeListHidden",
          "description": "Computes value of the `listHidden` property.\nList is hidden when no requests are found and it is not searching.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 2
            },
            "end": {
              "line": 403,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasRequests",
              "type": "Boolean"
            },
            {
              "name": "isSearch",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_navigateHandler",
          "description": "Handler for navigate action from the list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 2
            },
            "end": {
              "line": 411,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteSelected",
          "description": "Handles items delete event from item click.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 2
            },
            "end": {
              "line": 423,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_deleteRequestDetails",
          "description": "Deletes a request from the details panel.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 2
            },
            "end": {
              "line": 432,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_delete",
          "description": "Performs a delete action of request items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 2
            },
            "end": {
              "line": 466,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "deleted",
              "type": "Array.<Object>",
              "description": "List of deleted items."
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          }
        },
        {
          "name": "_dispatchDelete",
          "description": "Dispatches `request-objects-deleted` event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 472,
              "column": 2
            },
            "end": {
              "line": 484,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "deleted",
              "type": "Array.<Object>",
              "description": "List of requests to delete."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "revertDeleted",
          "description": "Restores removed requests.\nIt does nothing if `_latestDeleted` is not set or empty.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 491,
              "column": 2
            },
            "end": {
              "line": 507,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "A promise resolved when objects were restored"
          }
        },
        {
          "name": "_dispatchUndelete",
          "description": "Dispatches `request-objects-undeleted` event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 514,
              "column": 2
            },
            "end": {
              "line": 526,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array.<Object>",
              "description": "List of deleted requests. The list\ncontains objects with `_id` and `_rev` properties."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_closeSelectionMenu",
          "description": "Forces selection menu to close.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 530,
              "column": 2
            },
            "end": {
              "line": 539,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeMainMenu",
          "description": "Forces main menu to close.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 543,
              "column": 2
            },
            "end": {
              "line": 546,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "openExportAll",
          "description": "Toggles export options panel and sets export items to all currently loaded requests.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 550,
              "column": 2
            },
            "end": {
              "line": 554,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelExportOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 556,
              "column": 2
            },
            "end": {
              "line": 559,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_exportAllFile",
          "description": "Creates export file for all items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 564,
              "column": 2
            },
            "end": {
              "line": 573,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "Result of calling `_doExportItems()`"
          }
        },
        {
          "name": "_acceptExportOptions",
          "description": "Handler for `accept` event dispatched by export options element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 579,
              "column": 2
            },
            "end": {
              "line": 583,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Result of calling `_doExportItems()`"
          }
        },
        {
          "name": "_doExportItems",
          "description": "Calls `_dispatchExportData()` from requests lists mixin with\nprepared arguments",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 2
            },
            "end": {
              "line": 609,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of request to export with the project."
            },
            {
              "name": "detail",
              "type": "String",
              "description": "Export configuration"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_onExportSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 611,
              "column": 2
            },
            "end": {
              "line": 615,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onDetails",
          "description": "Opens the request details applet with the request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 620,
              "column": 2
            },
            "end": {
              "line": 623,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_loadRequestDetails",
          "description": "Fires `navigate` event for currently loaded in the details request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 627,
              "column": 2
            },
            "end": {
              "line": 630,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_searchHandler",
          "description": "Handler for the `search` event on the search input.\nCalls `query()` with input's value as argument.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 636,
              "column": 2
            },
            "end": {
              "line": 639,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteAllClick",
          "description": "Handler for delete all menu option click.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 643,
              "column": 2
            },
            "end": {
              "line": 647,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onClearDialogResult",
          "description": "Called when delete datastore dialog is closed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 652,
              "column": 2
            },
            "end": {
              "line": 657,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearDatastore",
          "description": "Removes all data from the datastore and then fires",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 661,
              "column": 2
            },
            "end": {
              "line": 673,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatchDeleteModel",
          "description": "Dispatches `destroy-model` with `saved` on the models list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 678,
              "column": 2
            },
            "end": {
              "line": 689,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_editRequestDetails",
          "description": "Opens request details editor in place of the request details applet.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 693,
              "column": 2
            },
            "end": {
              "line": 700,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resizeSheetContent",
          "description": "Resizes `bottom-sheet` content by calling `notifyResize()` on each content panel.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 705,
              "column": 2
            },
            "end": {
              "line": 711,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelRequestEdit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 713,
              "column": 2
            },
            "end": {
              "line": 715,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveRequestEdit",
          "description": "Handler fro save request event from the editor.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 719,
              "column": 2
            },
            "end": {
              "line": 722,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasSelection",
          "description": "Checks if selection has items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 728,
              "column": 2
            },
            "end": {
              "line": 730,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length",
              "type": "Number",
              "description": "Current size of selection"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if there is a selection."
          }
        },
        {
          "name": "_updateListStyles",
          "description": "Updates icon size CSS variable and notifies resize on the list when\nlist type changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 736,
              "column": 2
            },
            "end": {
              "line": 745,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "?String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_generateFileName",
          "description": "Generates file name for the export options panel.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 750,
              "column": 2
            },
            "end": {
              "line": 752,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/dnd.html",
          "description": "Drag and drop"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 72,
          "column": 0
        },
        "end": {
          "line": 792,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.HistoryPanel",
      "attributes": [
        {
          "name": "list-hidden",
          "description": "Computed value, true if the requests lists is hidden.",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 6
            },
            "end": {
              "line": 315,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-items",
          "description": "Selected items list.",
          "sourceRange": {
            "start": {
              "line": 321,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 26
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "has-selection",
          "description": "Computed value, true when the user made a selection on the list.",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 91
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "editor-opened",
          "description": "When true the editor panel is rendered",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 27
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "details-opened",
          "description": "When true the details panel is rendered",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 28
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-auto-projects",
          "description": "Passed to the request editor",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "draggable-enabled",
          "description": "Enables the comonent to accept drop action with a request.",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 6
            },
            "end": {
              "line": 341,
              "column": 39
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "destroy-model",
          "description": "Dispatched when the user requested to clear the data.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "export-data",
          "description": "Dispatched to export history data to file / drive",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "navigate",
          "description": "Fired when navigation was requested",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-objects-deleted",
          "description": "Fired when requests are to be deleted. Informs the model to delete items.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-objects-undeleted",
          "description": "Fired when the \"revert\" delete button has been used.\nInforms the requests model to restore the data.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "history-panel",
      "mixins": [
        "RequestsListMixin",
        "HistoryListMixin"
      ]
    }
  ]
}
